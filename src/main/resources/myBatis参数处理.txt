单个参数：myBatis不会做特殊处理。
	#{参数名}取出参数值
	
多个参数：myBatis会做特殊处理。
	多个参数会被封装成一个map对象。其中：
		key：为param1...paramN，或者参数的索引值（0...N-1）
		value：传入的参数值
		#{}就是从map中获取指定的key的值
		
	命名参数：明确指定封装参数map的key，使用注解@Param，如：public void getByIdAndName(@Param("id")Integer id, @Param("lastName")String lastName);
			#{key值}取出参数值
			
	POJO:
	如果这些参数正好是我们业务逻辑的数据模型，我们建议直接传入POJO
		#{属性名}取出POJO的属性值
		
	MAP:
	如果这些参数不是业务模型中的数据，没有对应的POJO，也不经常用，为了方便，我们可以传入自定义map，其中
		#{key}：取出map中对应的值
	
	TO:
	如果这些参数不是业务模型中的数据，没有对应的POJO，而且频繁使用，推荐编写一个TO(Transfer Object)数据传输对象
	
	
========================================================================================================================
public Student getStudent(@Param("id")Integer id, String name);
sql取值方法：id   <--> #{id}或#{param1}
			name <--> #{param2}

public Student getStudent(Integer id, @Param("s")Student stu);
sql取值方法：id   <--> #{param1}
			name <--> #{param2.name}或#{e.name}

##注意：如果是Collection(List、Set)类型或者是数组，myBatis会做特殊处理，把传入的list或数组封装在map对象中，其中
	1.key为collection(若是Collection），如果是List还可以使用list作为key
	2.key为array（若是数组）
public Student getStudentById(List<Integer> ids);
sql取值方法：第一个id的值 #{list[0]}


